# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

env:
  nreplicas: 4
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        replica: [0, 1, 2, 3]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    - uses: actions/cache@v4
      with:
        path: |
          ~/opt
          ~/.ccache
        key: ccache-${{ runner.os }}-${{ github.sha }}
        restore-keys: ccache-${{ runner.os }}-

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Set paths
      run: |
        echo "$HOME/opt/bin" >> $GITHUB_PATH
        echo "CPATH=$HOME/opt/include:$HOME/opt/libtorch/include/torch/csrc/api/include/:$HOME/opt/libtorch/include/:$HOME/opt/libtorch/include/torch:$CPATH" >> $GITHUB_ENV
        echo "INCLUDE=$HOME/opt/include:$HOME/opt/libtorch/include/torch/csrc/api/include/:$HOME/opt/libtorch/include/:$HOME/opt/libtorch/include/torch:$INCLUDE" >> $GITHUB_ENV
        echo "LIBRARY_PATH=$HOME/opt/lib:$HOME/opt/libtorch/lib:$LIBRARY_PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$HOME/opt/lib:$HOME/opt/libtorch/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "PYTHONPATH=$HOME/opt/lib/plumed/python:$PYTHONPATH" >> $GITHUB_ENV
        # needed to avoid MPI warning
        echo "OMPI_MCA_btl=^openib" >> $GITHUB_ENV

    - name: Install software
      run: |
        sudo apt update
        sudo apt install mpi-default-bin mpi-default-dev
        sudo apt install libfftw3-dev gsl-bin libgsl0-dev libboost-serialization-dev
        sudo apt install ccache
        sudo apt-get update
        pip install -r requirements.txt
        git clone --bare https://github.com/plumed/plumed2.git
        sudo ln -s ccache /usr/local/bin/mpic++
        export PATH=/usr/lib/ccache:${PATH}
        ccache -s
        .ci/install.libtorch
        # version=master or version=f123f12f3 to select a specific version
        # pick newest release branch (alphabetic, will fail at v2.10)
        CXX="mpic++" .ci/install.plumed version="$(cd plumed2.git ; git branch | sed "s/^ *//" | grep '^v2\.[0-9]$' | tail -n 1)" repo=$PWD/plumed2.git
        # GB: in addition, we install master version as plumed_master
        CXX="mpic++" .ci/install.plumed version=master suffix=_master repo=$PWD/plumed2.git
        ccache -s
    - name: Optimize parallel build
      run: |
        wget https://github.com/plumed-tutorials/plumed-tutorials.github.io/raw/master/_data/lessons.yml -P _data
        python optimize_build.py ${{matrix.replica}} ${{env.nreplicas}} 170.0 lessons/*/*/
    - name: Run
      run: |
        python --version
        # N.B. If you adjust the number of replicas used here you need to adjust the liquid syntax in summary.md that builds the total number of lessons that use each action 
        python compile.py --nreplicas ${{env.nreplicas}} --replica ${{matrix.replica}}
        cp $(plumed_master info --root)/json/syntax.json syntax.${{matrix.replica}}.json
    - name: Create tar ball
      run: |
        tar cf lessons.tar $(find . -name "*.pdf") $(find . -name "*.png") $(find . -name "*.gif") $(find . -name "*.jpeg") $(find . -name "*.jpg") $(find . -name "*.md") $(find . -name "*.stdout.txt.zip") $(find . -name "*.stderr.txt.zip") $(find . -name ".svg") $(find . -name "*.html") $(find . -name *.js) $(find . -name *.css) _data/*.yml syntax.${{matrix.replica}}.json

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: lesson-content${{matrix.replica}}
        path: lessons.tar 
        retention-days: 1

  # This is the job that uploads the website
  upload:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    - name: Download artifacts
      uses: actions/download-artifact@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'
    - name: Install software
      run: |
        grep 'PyYAML\|pytz\|networkx\|numpy' requirements.txt > requirements-upload.txt
        pip install -r requirements-upload.txt
    - name: Create graph
      run: |
        python create_graph.py
    - name: Prepare for upload
      run: |
        bash .ci/prepare _config.yml _layouts _data assets teacher.png nest.png pigeon.png pigeon-MC.png
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: github.ref == 'refs/heads/main'
      with:
          external_repository: plumed-tutorials/plumed-tutorials.github.io
          publish_branch: master
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./tmp-TutorialSite
          force_orphan: true
          enable_jekyll: true
          user_name: 'PlumedBot'
          user_email: 'giovanni.bussi+plumedbot@gmail.com'
